name: Deploy to Production

on:
  push:
    branches: ['main'] # 只在 main 分支推送时触发
    paths-ignore: # 可选：忽略文档更新
      - '**.md'
      - '.gitignore'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest # 使用 GitHub 提供的虚拟机环境

    steps:
      # 步骤1：检出代码
      - name: Checkout code
        uses: actions/checkout@v3 # 官方提供的代码检出操作

      # 步骤2：设置 Node.js 环境
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22.14.0' # 保持与本地开发版本一致

      # 步骤3：安装依赖并构建
      - name: Install and Build
        run: |
          npm ci               # 精确安装依赖（类似 npm install）
          npm run build        # 执行构建命令（根据实际项目调整）

      # 步骤4：配置 SSH 连接
      - name: Configure SSH
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }} # 注入私钥

      # 步骤5：传输文件到服务器
      - name: Deploy via SSH
        run: |
          # 创建服务器目录（如果不存在）
          ssh -o StrictHostKeyChecking=no \
            ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }} \
            "mkdir -p ${{ secrets.PROJECT_PATH }}"

          # 同步文件到服务器（排除 node_modules）
          rsync -avz --delete \
            --exclude='node_modules/' \
            --exclude='.git/' \
            ./ \
            ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }}:${{ secrets.PROJECT_PATH }}

      # 步骤6：在服务器执行部署命令
      - name: Restart Service
        run: |
          ssh -o StrictHostKeyChecking=no \
            ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }} \
            "cd ${{ secrets.PROJECT_PATH }} && \
             npm ci --production && \
             pm2 restart ecosystem.config.js"  # 根据实际 PM2 配置调整
